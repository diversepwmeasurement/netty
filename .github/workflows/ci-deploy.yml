env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryhandler.count=5
    -Dmaven.wagon.httpconnectionManager.ttlSeconds=240
jobs:
  deploy-staged-snapshots:
    needs: stage-snapshot
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: '8'
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-maven-deploy-staged-snapshots-${{ hashFiles('**/pom.xml')
          }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-deploy-staged-snapshots-

          ${{ runner.os }}-maven-

          '
    - continue-on-error: true
      name: Prepare environment variables
      run: 'echo "LOCAL_STAGING_DIR=$HOME/local-staging" >> $GITHUB_ENV

        '
    - continue-on-error: true
      name: Download linux-aarch64 staging directory
      uses: actions/download-artifact@v4
      with:
        name: linux-aarch64-local-staging
        path: ~/linux-aarch64-local-staging
    - continue-on-error: true
      name: Download linux-riscv64 staging directory
      uses: actions/download-artifact@v4
      with:
        name: linux-riscv64-local-staging
        path: ~/linux-riscv64-local-staging
    - continue-on-error: true
      name: Download linux-x86_64-java8 staging directory
      uses: actions/download-artifact@v4
      with:
        name: linux-x86_64-java8-local-staging
        path: ~/linux-x86_64-java8-local-staging
    - continue-on-error: true
      name: Merge staging repositories
      run: 'mkdir -p ~/local-staging/deferred

        cat ~/linux-aarch64-local-staging/deferred/.index >>  ~/local-staging/deferred/.index

        cp -r ~/linux-aarch64-local-staging/deferred/* ~/local-staging/deferred/

        cat ~/linux-riscv64-local-staging/deferred/.index >>  ~/local-staging/deferred/.index

        cp -r ~/linux-riscv64-local-staging/deferred/* ~/local-staging/deferred/

        cat ~/linux-x86_64-java8-local-staging/deferred/.index >>  ~/local-staging/deferred/.index

        cp -r ~/linux-x86_64-java8-local-staging/deferred/* ~/local-staging/deferred/

        '
    - continue-on-error: true
      uses: s4u/maven-settings-action@v3.0.0
      with:
        servers: "[{\n  \"id\": \"sonatype-nexus-snapshots\",\n  \"username\": \"\
          ${{ secrets.SONATYPE_USERNAME }}\",\n  \"password\": \"${{ secrets.SONATYPE_PASSWORD\
          \ }}\"\n}]\n"
    - continue-on-error: true
      name: Deploy local staged artifacts
      run: ./mvnw -B --file pom.xml org.sonatype.plugins:nexus-staging-maven-plugin:deploy-staged
        -DaltStagingDirectory=$LOCAL_STAGING_DIR
  stage-snapshot:
    name: stage-snapshot-${{ matrix.setup }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-maven-${{ matrix.setup }}-${{ hashFiles('**/pom.xml')
          }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-${{ matrix.setup }}-

          ${{ runner.os }}-maven-

          '
    - continue-on-error: true
      name: Create local staging directory
      run: mkdir -p ~/local-staging
    - continue-on-error: true
      name: Build docker image
      run: docker-compose ${{ matrix.docker-compose-build }}
    - continue-on-error: true
      name: Stage snapshots to local staging directory
      run: docker-compose ${{ matrix.docker-compose-run }}
    - continue-on-error: true
      name: Upload local staging directory
      uses: actions/upload-artifact@v4
      with:
        if-no-files-found: error
        name: ${{ matrix.setup }}-local-staging
        path: ~/local-staging
    strategy:
      matrix:
        include:
        - docker-compose-build: -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.18.yaml
            build
          docker-compose-run: -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.18.yaml
            run stage-snapshot
          setup: linux-x86_64-java8
        - docker-compose-build: -f docker/docker-compose.centos-7.yaml build
          docker-compose-run: -f docker/docker-compose.centos-7.yaml run cross-compile-aarch64-stage-snapshot
          setup: linux-aarch64
        - docker-compose-build: -f docker/docker-compose.ubuntu-20.04.yaml build
          docker-compose-run: -f docker/docker-compose.ubuntu-20.04.yaml run cross-compile-riscv64-stage-snapshot
          setup: linux-riscv64
name: Deploy project
on:
  repository_dispatch:
    types: trigger-ga___ci-deploy.yml
permissions: read-all
