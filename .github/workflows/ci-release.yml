env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryhandler.count=5
    -Dmaven.wagon.httpconnectionManager.ttlSeconds=240
jobs:
  deploy-staged-release:
    needs: stage-release-linux
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Download release-workspace
      uses: actions/download-artifact@v4
      with:
        name: prepare-release-workspace
        path: ./prepare-release-workspace/
    - continue-on-error: true
      name: Adjust mvnw permissions
      run: chmod 755 ./prepare-release-workspace/mvnw
    - continue-on-error: true
      name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: '8'
    - continue-on-error: true
      name: Setup git configuration
      run: 'git config --global user.email "netty-project-bot@users.noreply.github.com"

        git config --global user.name "Netty Project Bot"

        '
    - continue-on-error: true
      name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY_PEM }}
        known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
    - continue-on-error: true
      name: Download linux-aarch64 staging directory
      uses: actions/download-artifact@v4
      with:
        name: linux-aarch64-local-staging
        path: ~/linux-aarch64-local-staging
    - continue-on-error: true
      name: Download linux-riscv64 staging directory
      uses: actions/download-artifact@v4
      with:
        name: linux-riscv64-local-staging
        path: ~/linux-riscv64-local-staging
    - continue-on-error: true
      name: Download linux-x86_64-java8 staging directory
      uses: actions/download-artifact@v4
      with:
        name: linux-x86_64-java8-local-staging
        path: ~/linux-x86_64-java8-local-staging
    - continue-on-error: true
      name: Merge staging repositories
      run: bash ./.github/scripts/merge_local_staging.sh /home/runner/local-staging/staging
        ~/linux-aarch64-local-staging/staging ~/linux-riscv64-local-staging/staging
        ~/linux-x86_64-java8-local-staging/staging
      working-directory: ./prepare-release-workspace/
    - continue-on-error: true
      uses: s4u/maven-settings-action@v3.0.0
      with:
        servers: "[{\n  \"id\": \"sonatype-nexus-staging\",\n  \"username\": \"${{\
          \ secrets.SONATYPE_USERNAME }}\",\n  \"password\": \"${{ secrets.SONATYPE_PASSWORD\
          \ }}\"\n}]\n"
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-maven-deploy-staged-release-${{ hashFiles('**/pom.xml')
          }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-deploy-staged-release-

          ${{ runner.os }}-maven-

          '
    - continue-on-error: true
      name: Deploy local staged artifacts
      run: ./mvnw -B -ntp --file pom.xml org.sonatype.plugins:nexus-staging-maven-plugin:deploy-staged
        -DnexusUrl=https://oss.sonatype.org -DserverId=sonatype-nexus-staging -DaltStagingDirectory=/home/runner/local-staging
        -DskipStagingRepositoryClose=true
      working-directory: ./prepare-release-workspace/
    - continue-on-error: true
      if: ${{ failure() }}
      name: Rollback release on failure
      run: bash ./.github/scripts/release_rollback.sh release.properties netty/netty
        4.1
      working-directory: ./prepare-release-workspace/
  prepare-release:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        ref: 4.1
    - continue-on-error: true
      name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: '8'
    - continue-on-error: true
      name: Setup git configuration
      run: 'git config --global user.email "netty-project-bot@users.noreply.github.com"

        git config --global user.name "Netty Project Bot"

        '
    - continue-on-error: true
      name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY_PEM }}
        known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-maven-prepare-release-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-prepare-release-

          ${{ runner.os }}-maven-

          '
    - continue-on-error: true
      name: Prepare release with Maven
      run: './mvnw -B -ntp --file pom.xml release:prepare -DpreparationGoals=clean
        -DskipTests=true

        ./mvnw -B -ntp clean

        '
    - continue-on-error: true
      name: Checkout tag
      run: ./.github/scripts/release_checkout_tag.sh release.properties
    - continue-on-error: true
      name: Upload workspace
      uses: actions/upload-artifact@v4
      with:
        name: prepare-release-workspace
        path: ${{ github.workspace }}/**
  stage-release-linux:
    name: stage-release-${{ matrix.setup }}
    needs: prepare-release
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Download release-workspace
      uses: actions/download-artifact@v4
      with:
        name: prepare-release-workspace
        path: ./prepare-release-workspace/
    - continue-on-error: true
      name: Adjust mvnw permissions
      run: chmod 755 ./prepare-release-workspace/mvnw
    - continue-on-error: true
      name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: '8'
    - continue-on-error: true
      name: Setup git configuration
      run: 'git config --global user.email "netty-project-bot@users.noreply.github.com"

        git config --global user.name "Netty Project Bot"

        '
    - continue-on-error: true
      name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY_PEM }}
        known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
    - continue-on-error: true
      uses: s4u/maven-settings-action@v3.0.0
      with:
        servers: "[{\n  \"id\": \"sonatype-nexus-staging\",\n  \"username\": \"${{\
          \ secrets.SONATYPE_USERNAME }}\",\n  \"password\": \"${{ secrets.SONATYPE_PASSWORD\
          \ }}\"\n}]\n"
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-maven-${{ matrix.setup }}-${{ hashFiles('**/pom.xml')
          }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-${{ matrix.setup }}-

          ${{ runner.os }}-maven-

          '
    - continue-on-error: true
      name: Create local staging directory
      run: mkdir -p ~/local-staging
    - continue-on-error: true
      name: Build docker image
      run: docker-compose ${{ matrix.docker-compose-build }}
      working-directory: ./prepare-release-workspace/
    - continue-on-error: true
      env:
        GPG_KEYNAME: ${{ secrets.GPG_KEYNAME }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
      name: Stage release to local staging directory
      run: docker-compose ${{ matrix.docker-compose-run }}
      working-directory: ./prepare-release-workspace/
    - continue-on-error: true
      name: Upload local staging directory
      uses: actions/upload-artifact@v4
      with:
        if-no-files-found: error
        name: ${{ matrix.setup }}-local-staging
        path: ~/local-staging
    - continue-on-error: true
      if: ${{ failure() }}
      name: Rollback release on failure
      run: bash ./.github/scripts/release_rollback.sh release.properties netty/netty
        4.1
      working-directory: ./prepare-release-workspace/
    strategy:
      matrix:
        include:
        - docker-compose-build: -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.18.yaml
            build
          docker-compose-run: -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.18.yaml
            run stage-release
          setup: linux-x86_64-java8
        - docker-compose-build: -f docker/docker-compose.centos-7.yaml build
          docker-compose-run: -f docker/docker-compose.centos-7.yaml run cross-compile-aarch64-stage-release
          setup: linux-aarch64
        - docker-compose-build: -f docker/docker-compose.ubuntu-20.04.yaml build
          docker-compose-run: -f docker/docker-compose.ubuntu-20.04.yaml run cross-compile-riscv64-stage-release
          setup: linux-riscv64
name: Release 4.1.x
on:
  repository_dispatch:
    types: trigger-ga___ci-release.yml
permissions: read-all
