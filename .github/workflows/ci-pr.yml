env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryhandler.count=5
    -Dmaven.wagon.httpconnectionManager.ttlSeconds=240
jobs:
  build-pr:
    name: ${{ matrix.setup }} build
    needs: verify-pr
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-maven-${{ matrix.setup }}-${{ hashFiles('**/pom.xml')
          }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-${{ matrix.setup }}-

          ${{ runner.os }}-maven-

          '
    - continue-on-error: true
      name: Build docker image
      run: docker-compose ${{ matrix.docker-compose-build }}
    - continue-on-error: true
      name: Build project with leak detection
      run: docker-compose ${{ matrix.docker-compose-run }} | tee build-leak.output
    - continue-on-error: true
      name: Checking for test failures
      run: ./.github/scripts/check_build_result.sh build-leak.output
    - continue-on-error: true
      name: Checking for detected leak
      run: ./.github/scripts/check_leak.sh build-leak.output
    - continue-on-error: true
      if: cancelled()
      name: print JVM thread dumps when cancelled
      uses: ./.github/actions/thread-dump-jvms
    - continue-on-error: true
      if: always()
      name: Upload Test Results
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.setup }}
        path: '**/target/surefire-reports/TEST-*.xml'
    - continue-on-error: true
      if: ${{ failure() }}
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ matrix.setup }}-target
        path: '**/target/surefire-reports/

          **/target/autobahntestsuite-reports/

          **/hs_err*.log

          **/core.*

          '
    strategy:
      fail-fast: false
      matrix:
        include:
        - docker-compose-build: -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.18.yaml
            build
          docker-compose-run: -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.18.yaml
            run build-leak
          setup: linux-x86_64-java8
        - docker-compose-build: -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.111.yaml
            build
          docker-compose-run: -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.111.yaml
            run build-leak
          setup: linux-x86_64-java11
        - docker-compose-build: -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.graalvm111.yaml
            build
          docker-compose-run: -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.graalvm111.yaml
            run build-leak
          setup: linux-x86_64-java11-graal
        - docker-compose-build: -f docker/docker-compose.yaml -f docker/docker-compose.centos-7.117.yaml
            build
          docker-compose-run: -f docker/docker-compose.yaml -f docker/docker-compose.centos-7.117.yaml
            run build-leak
          setup: linux-x86_64-java17
        - docker-compose-build: -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.21.yaml
            build
          docker-compose-run: -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.21.yaml
            run build-leak
          setup: linux-x86_64-java21
        - docker-compose-build: -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.22.yaml
            build
          docker-compose-run: -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.22.yaml
            run build-leak
          setup: linux-x86_64-java22
        - docker-compose-build: -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.111.yaml
            build
          docker-compose-run: -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.111.yaml
            run build-leak-boringssl-static
          setup: linux-x86_64-java11-boringssl
        - docker-compose-build: -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.111.yaml
            build
          docker-compose-run: -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.111.yaml
            run build-leak-adaptive
          setup: linux-x86_64-java11-adaptive
  build-pr-cross:
    name: linux-${{ matrix.arch }}-verify-native
    needs: verify-pr
    permissions:
      contents: read
      packages: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-maven-build-pr-${{ matrix.arch }}-${{ hashFiles('**/pom.xml')
          }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-build-pr-${{ matrix.arch }}-

          ${{ runner.os }}-maven-

          '
    - continue-on-error: true
      id: runcmd
      name: Run commands
      uses: uraimo/run-on-arch-action@v2
      with:
        arch: ${{ matrix.arch }}
        distro: ubuntu20.04
        dockerRunArgs: '--volume "/home/runner/.m2/repository/:/root/.m2/repository"

          '
        githubToken: ${{ github.token }}
        install: 'apt-get update -q -y

          apt-get install -q -y openjdk-11-jdk autoconf automake libtool make tar
          maven git

          '
        run: 'JAVA_HOME=/usr/lib/jvm/java-11-openjdk-${{ matrix.java_arch || matrix.arch
          }} ./mvnw -V -B -ntp -pl testsuite-native -am clean package -DskipTests=true
          -Dcheckstyle.skip=true -DskipNativeTestsuite=false -Dtcnative.classifier=

          '
    strategy:
      fail-fast: false
      matrix:
        include:
        - arch: aarch64
          java_arch: arm64
        - arch: riscv64
  build-pr-windows:
    name: windows-x86_64-java11-boringssl
    needs: verify-pr
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: '11'
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: pr-windows-x86_64-maven-cache-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: 'pr-windows-x86_64-maven-cache-

          '
    - continue-on-error: true
      name: Build project
      run: ./mvnw.cmd -B -ntp --file pom.xml clean package -Pboringssl -DskipHttp2Testsuite=true
        -DskipAutobahnTestsuite=true
    - continue-on-error: true
      if: cancelled()
      name: print JVM thread dumps when cancelled
      uses: ./.github/actions/thread-dump-jvms
    - continue-on-error: true
      if: always()
      name: Upload Test Results
      uses: actions/upload-artifact@v4
      with:
        name: test-results-windows-x86_64-java11-boringssl
        path: '**/target/surefire-reports/TEST-*.xml'
    - continue-on-error: true
      if: ${{ failure() }}
      uses: actions/upload-artifact@v4
      with:
        name: build-pr-windows-target
        path: '**/target/surefire-reports/

          **/hs_err*.log

          '
  verify-pr:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: '8'
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-maven-verify-pr-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-verify-pr-

          ${{ runner.os }}-maven-

          '
    - continue-on-error: true
      name: Verify with Maven
      run: ./mvnw -B -ntp --file pom.xml verify -DskipTests=true
    - continue-on-error: true
      name: Checking bom dependency versions
      run: ./.github/scripts/check_bom_dependencies.sh
    - continue-on-error: true
      if: cancelled()
      name: print JVM thread dumps when cancelled
      uses: ./.github/actions/thread-dump-jvms
name: Build PR
on:
  repository_dispatch:
    types: trigger-ga___ci-pr.yml
permissions:
  contents: read
